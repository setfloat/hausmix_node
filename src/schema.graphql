# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type HeadsOfHouse {
  id: String
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  permissions: [Permissions!]!
  households: [Household]
  householdsManaged: [Household]
}

type Query {
  invite(inviteToken: String!): Invite
  loggedInUser: User
  currentHousehold(id: String!): Household!
  households: [Household]
  choreTemplate(id: String!): ChoreTemplate
  houseSingleUserDebts(householdId: String!, specificUserId: String!): [Debt]
}

type Mutation {
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  signUp(email: String!, password: String!, name: String!): User!
  createHousehold(name: String!): Household!
  createInvite(householdId: String!, invitedEmail: String!): Invite
  acceptInvite(
    inviteToken: String!
    email: String!
    password: String!
    name: String!
  ): User!
  acceptEmailConfirmation(inviteToken: String!): Invite!
  createChoreTemplate(
    name: String!
    description: String
    choreTemplateCost: Float
    household: String!
    frequency: String!
  ): ChoreTemplate!
  createAssignChoreMutation(
    name: String!
    currentAssigned: [String!]!
    choreTemplate: String
    instanceCost: Float!
    startDate: DateTime!
    deadline: DateTime!
    completionStatus: ChoreCompleteStatus!
    household: String!
  ): ChoreInstance
  markComplete(id: String!): ChoreInstance
  thievingMarkComplete(id: String!): ChoreInstance
  cancelDebt(id: String!): Debt
  settleDebt(id: String!): Debt
  unpayDebt(id: String!): Debt
  settleAllDebts(
    specificUserId: String
    householdId: String
    totalPayment: Float
  ): [Debt]
}
